{"version":3,"file":"RequestTool-DVgvxAYK.js","sources":["../../src/Components/IconUploader.jsx","../../src/Components/RequestTool.jsx"],"sourcesContent":["import styles from \"../styles/components/IconUploader.module.scss\";\r\n\r\nexport default function IconUploader({ icon, onChange }) {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"icon\" className='custom-file-label'>\r\n        Upload icon (PNG or SVG)\r\n      </label>\r\n      <div className={styles.fileUploadHolder}>\r\n        <input\r\n          type=\"file\"\r\n          id=\"icon\"\r\n          name=\"icon\"\r\n          accept=\"image/png, image/svg+xml\"\r\n          className={styles.fileUploadInput}\r\n          onChange={onChange}\r\n        />\r\n        {icon && (\r\n          <div className={styles.iconPreview}>\r\n            <img\r\n              src={icon}\r\n              alt=\"Preview\"\r\n              style={{ width: \"48px\", height: \"48px\" }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/components/RequestTool.module.scss';\r\nimport { X } from \"lucide-react\";\r\nimport { FormInput, CategoriesInput, Textarea } from './Inputs';\r\nimport IconUploader from './IconUploader';\r\nimport { SubmitButton } from './Buttons';\r\nimport SuccessMessage from './SuccessMessage';\r\n\r\nexport default function RequestTool({ onClose, isMobileMenuOpen }) {\r\n  const tagMaxChar = 20;\r\n  const descriptionMaxChars = 420;\r\n\r\n  const initialToolState = {\r\n    name: '',\r\n    categories: [],\r\n    description: '',\r\n    icon: '',\r\n  };\r\n\r\n  const [tagsInput, setTagsInput] = useState('');\r\n  const [requestTool, setRequestTool] = useState(initialToolState);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [isSent, setIsSent] = useState(false);\r\n\r\n  const [touched, setTouched] = useState({\r\n    name: false,\r\n    categories: false,\r\n    description: false,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    name: false,\r\n    categories: false,\r\n    description: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"hidden\";\r\n    document.documentElement.style.overflow = \"hidden\";\r\n    document.body.style.touchAction = \"none\";\r\n    return () => {\r\n      if(!isMobileMenuOpen) {\r\n      document.body.style.overflow = \"\";\r\n      document.documentElement.style.overflow = \"\";\r\n      document.body.style.touchAction = \"\";\r\n      }\r\n    };\r\n  }, [isMobileMenuOpen]);\r\n\r\n  const handleRequestToolName = (e) => {\r\n    const value = e.target.value;\r\n    setRequestTool(prev => ({ ...prev, name: value }));\r\n    if (touched.name) {\r\n      setErrors(prev => ({ ...prev, name: value.trim() === '' }));\r\n    }\r\n  };\r\n\r\n  // const handleRequestToolTagsChange = (e) => {\r\n  //   const value = e.target.value;\r\n  //   const inputSegments = value.split(\";\").filter(Boolean);\r\n  //   const existingTagCount = requestTool.categories.length;\r\n\r\n  //   if (existingTagCount + inputSegments.length > 5) return;\r\n\r\n  //   const isValid = inputSegments.every((tag) => tag.length <= tagMaxChar);\r\n  //   if (!isValid) return;\r\n\r\n  //   setTagsInput(value);\r\n  // };\r\n\r\n  const handleRequestTagsKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n\r\n      const newTags = tagsInput\r\n        .split(\";\")\r\n        .map((tag) => tag.trim())\r\n        .filter((tag) => tag && tag.length <= tagMaxChar);\r\n\r\n      const combinedTags = [...requestTool.categories, ...newTags].slice(0, 5);\r\n\r\n      setRequestTool(prev => ({ ...prev, categories: combinedTags }));\r\n      setTagsInput('');\r\n\r\n      if (touched.categories) {\r\n        setErrors(prev => ({ ...prev, categories: combinedTags.length === 0 }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRequestTagsChange = (e) => {\r\n  const value = e.target.value;\r\n\r\n  // If the user added a semicolon, try to extract tags\r\n  if (value.includes(\";\")) {\r\n    const segments = value\r\n      .split(\";\")\r\n      .map((tag) => tag.trim())\r\n      .filter((tag) => tag && tag.length <= tagMaxChar);\r\n\r\n    if (segments.length > 0) {\r\n      const availableSlots = 5 - requestTool.categories.length;\r\n      const newTags = segments.slice(0, availableSlots);\r\n\r\n      const combinedTags = [...requestTool.categories, ...newTags].slice(0, 5);\r\n      setRequestTool(prev => ({ ...prev, categories: combinedTags }));\r\n\r\n      // Set the input to empty or to the remaining part (if any)\r\n      setTagsInput('');\r\n    } else {\r\n      // No valid tags, keep typing\r\n      setTagsInput(value);\r\n    }\r\n  } else {\r\n    setTagsInput(value);\r\n  }\r\n};\r\n\r\n  const handleRemoveTag = (indexToRemove) => {\r\n    setRequestTool(prev => ({\r\n      ...prev,\r\n      categories: prev.categories.filter((_, idx) => idx !== indexToRemove),\r\n    }));\r\n  };\r\n\r\n  const handleRequestToolDescription = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length <= descriptionMaxChars) {\r\n      setRequestTool(prev => ({ ...prev, description: value }));\r\n      if (touched.description) {\r\n        setErrors(prev => ({ ...prev, description: value.trim() === '' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRequestToolIcon = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const allowedTypes = ['image/png', 'image/svg+xml'];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      alert('Only PNG and SVG files are allowed.');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setRequestTool(prev => ({ ...prev, icon: reader.result }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {\r\n      name: requestTool.name.trim() === '',\r\n      categories: requestTool.categories.length === 0,\r\n      description: requestTool.description.trim() === '',\r\n    };\r\n\r\n    setErrors(newErrors);\r\n    setTouched({ name: true, categories: true, description: true });\r\n\r\n    if (Object.values(newErrors).some(Boolean)) return;\r\n\r\n    setIsSending(true);\r\n    setIsSent(false);\r\n\r\n    setTimeout(() => {\r\n      setIsSending(false);\r\n      setIsSent(true);\r\n      setRequestTool(initialToolState);\r\n      setTagsInput('');\r\n      setTouched({ name: false, categories: false, description: false });\r\n      setErrors({ name: false, categories: false, description: false });\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.requestToolContainer}>\r\n      <div className={styles.requestToolOverlay}>\r\n        <div className={styles.requestTool}>\r\n          <button className={`btn ${styles.btnCross}`} onClick={onClose}><X size={20} /></button>\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <h1>Request tool</h1>\r\n            <FormInput\r\n              labelName=\"Tool name\"\r\n              type=\"text\"\r\n              name=\"toolname\"\r\n              value={requestTool.name}\r\n              onChange={handleRequestToolName}\r\n              error={errors.name}\r\n              touched={touched.name}\r\n              onBlur={() => setTouched(prev => ({ ...prev, name: true }))}\r\n            />\r\n            <CategoriesInput\r\n              tagsInput={tagsInput}\r\n              onChange={handleRequestTagsChange}\r\n              onKeyDown={handleRequestTagsKeyDown}\r\n              categories={requestTool.categories}\r\n              onRemove={handleRemoveTag}\r\n              error={errors.categories}\r\n              touched={touched.categories}\r\n              onBlur={() => setTouched(prev => ({ ...prev, categories: true }))}\r\n            />\r\n            <Textarea\r\n              value={requestTool.description}\r\n              onChange={handleRequestToolDescription}\r\n              maxLength={descriptionMaxChars}\r\n              error={errors.description}\r\n              touched={touched.description}\r\n              onBlur={() => setTouched(prev => ({ ...prev, description: true }))}\r\n              hasCounter={true}\r\n            />\r\n            <IconUploader\r\n              icon={requestTool.icon}\r\n              onChange={handleRequestToolIcon}\r\n            />\r\n            <SubmitButton\r\n              onCancel={onClose}\r\n              loading={isSending}\r\n              hasCancelBtn={true}\r\n            />\r\n          </form>\r\n          {isSent && \r\n            <SuccessMessage \r\n              successMessage=\"âœ… Tool request sent successfully!\"\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["IconUploader","icon","onChange","jsx","jsxs","styles","RequestTool","onClose","isMobileMenuOpen","initialToolState","tagsInput","setTagsInput","useState","requestTool","setRequestTool","isSending","setIsSending","isSent","setIsSent","touched","setTouched","errors","setErrors","useEffect","handleRequestToolName","e","value","prev","handleRequestTagsKeyDown","newTags","tag","combinedTags","handleRequestTagsChange","segments","availableSlots","handleRemoveTag","indexToRemove","_","idx","handleRequestToolDescription","handleRequestToolIcon","file","reader","handleSubmit","newErrors","X","FormInput","CategoriesInput","Textarea","SubmitButton","SuccessMessage"],"mappings":"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"}